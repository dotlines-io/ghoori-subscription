<?php


namespace Dotlines\GhooriSubscription\Tests;

use Dotlines\GhooriSubscription\Interfaces\INotificationProcessor;
use Dotlines\GhooriSubscription\Models\Notification;
use Dotlines\GhooriSubscription\Models\NotificationResponse;
use PHPUnit\Framework\TestCase;

class INotificationProcessorTest extends TestCase
{
    public string $notificationID = "";
    public string $invoiceID = "";
    public string $type = "";
    public string $status = "";
    public string $subscriptionID = "";
    public string $paymentID = "";
    public string $timestamp = "";

    public string $recordID = "";

    final public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->notificationID = "abc";
        $this->invoiceID = "abjdjww";
        $this->type = "newType";
        $this->status = "newStatus";
        $this->subscriptionID = "430";
        $this->paymentID = "32";
        $this->timestamp = date("Y-m-d");

        $this->recordID = "Record1234";
    }

    /**
     * @test
     */

    final public function it_succeeds_implementing_INotificationProcessor(): void
    {
        $notificationObj = new Notification($this->notificationID, $this->invoiceID, $this->type, $this->status, $this->subscriptionID, $this->paymentID, $this->timestamp);
        $ResponseObj = new NotificationResponse($this->recordID, $this->status, $this->timestamp);
        $stub = $this->createStub(INotificationProcessor::class);
        $stub->method('process')
            ->willReturn($ResponseObj);
        self::assertSame($ResponseObj, $stub->process($notificationObj, ['value1','value2']));
        self::assertEquals("Dotlines\GhooriSubscription\Models\NotificationResponse", get_class($stub->process($notificationObj, ['value1','value2'])));
    }
}
